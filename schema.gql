# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

"""joke"""
type Joke {
  id: ID!
  cat: JokeCategorys!
  category: String!
  text: String!
  flags: [String!]!
}

enum JokeCategorys {
  Any
  Programming
  Miscellaneous
  Dark
  Pun
  Spooky
  Christmas
}

"""user"""
type User {
  id: ID!
  name: String!
  email: String!
  password: String!
  createdAt: String!
  deletedAt: String!
  isDeleted: Boolean!
}

type UserType {
  email: String!
}

type Auth {
  accessToken: String!
  tokenType: String!
  expiresIn: Float!
  refreshToken: String!
  idToken: String
}

"""recipe """
type Recipe {
  id: ID!
  title: String!
  description: String
  creationDate: Date!
  ingredients: [String!]!
}

"""Date custom scalar type"""
scalar Date

type Query {
  joke(cat: String!): Joke!
  jokeAll: Joke!
  user1(id: Int!): User!
  user(name: String!): [User!]!
  users: [User!]!

  """Returns pong"""
  ping: String!
  signIn(input: CreateUserInput!): Auth!
  recipe(id: String!): Recipe!
  recipes(skip: Int = 0, take: Int = 25): [Recipe!]!
}

input CreateUserInput {
  id: String!
  name: String!
  email: String!
  password: String!
}

type Mutation {
  signUp(input: CreateUserInput!): UserType!
  protectedMethod: String!
  refreshToken(accessToken: String!, refreshToken: String!): Auth!
  addRecipe(newRecipeData: NewRecipeInput!): Recipe!
  removeRecipe(id: String!): Boolean!
}

input NewRecipeInput {
  title: String!
  description: String
  ingredients: [String!]!
}

type Subscription {
  recipeAdded: Recipe!
}
